spring.application.name=inventory-service
server.port=8082

#Mysql configuration
spring.datasource.url=jdbc:mysql://localhost:3306/vishvajit
spring.datasource.username=root
spring.datasource.password=mysql

#Hibernate Configuration
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.h2.console.enabled=true

#Below configuration for Retry mechanism
#Annotation (@RetryableTopic): Use if you want per-consumer fine control.
#Properties (application.properties):
#Use if you want one global policy across all Kafka consumers.
#Easier to manage in production (one place for retries, backoff, DLT).
# Number of retries before sending to DLT
#In real projects, many teams start with properties-based configs for consistency,
#and then override with @RetryableTopic only where specific business needs require it.
spring.kafka.consumer.retry.attempts=3

# Initial backoff delay (in ms)
spring.kafka.consumer.retry.backoff.delay=2000

# Backoff multiplier (2.0 means exponential growth: 2s ? 4s ? 8s)
spring.kafka.consumer.retry.backoff.multiplier=2.0

# Enable Dead Letter Topic (DLT)
spring.kafka.consumer.dlt.suffix=-dlt
spring.kafka.consumer.dlt.publish=true
